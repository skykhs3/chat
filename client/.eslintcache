[{"C:\\src\\chat\\client\\src\\index.js":"1","C:\\src\\chat\\client\\src\\components\\GamePlayPage\\index.js":"2","C:\\src\\chat\\client\\src\\components\\HomePage\\index.js":"3","C:\\src\\chat\\client\\src\\components\\ExaminingPage\\index.js":"4","C:\\src\\chat\\client\\src\\components\\RoomCreatePage\\index.js":"5","C:\\src\\chat\\client\\src\\components\\RegisterPage\\index.js":"6","C:\\src\\chat\\client\\src\\components\\LoginPage\\index.js":"7","C:\\src\\chat\\client\\src\\utills\\socket.js":"8","C:\\src\\chat\\client\\src\\components\\ExpiredPage\\index.js":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":9427,"mtime":1614495772282,"results":"12","hashOfConfig":"11"},{"size":3864,"mtime":1614496013718,"results":"13","hashOfConfig":"11"},{"size":646,"mtime":1614437873673,"results":"14","hashOfConfig":"11"},{"size":2436,"mtime":1614422966105,"results":"15","hashOfConfig":"11"},{"size":5359,"mtime":1614422966100,"results":"16","hashOfConfig":"11"},{"size":3585,"mtime":1614422966082,"results":"17","hashOfConfig":"11"},{"size":184,"mtime":1614490216500,"results":"18","hashOfConfig":"11"},{"size":185,"mtime":1614181160088,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"xv4t2y",{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\src\\chat\\client\\src\\index.js",[],["41","42"],"C:\\src\\chat\\client\\src\\components\\GamePlayPage\\index.js",["43","44","45","46"],"C:\\src\\chat\\client\\src\\components\\HomePage\\index.js",[],"C:\\src\\chat\\client\\src\\components\\ExaminingPage\\index.js",[],"C:\\src\\chat\\client\\src\\components\\RoomCreatePage\\index.js",[],["47","48"],"C:\\src\\chat\\client\\src\\components\\RegisterPage\\index.js",["49"],"import React from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios';\r\nclass RegisterPage extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n    \r\n    this.state={\r\n      email:\"\",\r\n      password:\"\",\r\n      password_confirmed:\"\",\r\n      nickname:\"\",\r\n      emailHelperText:\"\",\r\n      passwordHelperText:\"\",\r\n      password_confirmedHelperText:\"\",\r\n      nicknameHelperText:\"\",\r\n\r\n    }\r\n    axios.get('/api/users/auth').then(res=>{\r\n      console.log(res.data)\r\n      if(res.data.isAuth!==false){\r\n          this.props.history.push('/')\r\n      }\r\n      else{\r\n\r\n      }\r\n  })\r\n  }\r\n    loginOnClickHanlder=(e)=>{\r\n      this.props.history.push('/login')\r\n    }\r\n    emailOnChangeHandler=(event)=>{\r\n      this.setState({ email: event.currentTarget.value });\r\n    }\r\n    passwordOnChangeHandler=(event)=>{\r\n      this.setState({password:event.currentTarget.value});\r\n    }\r\n    password_confirmedOnChangedHandler=(event)=>{\r\n      this.setState({password_confirmed:event.currentTarget.value});\r\n    }\r\n    nicknameOnChangeHandler=(event)=>{\r\n      this.setState({nickname:event.currentTarget.value});\r\n    }\r\n    onSubmitHandler = (event) => {\r\n      var canPass=true;\r\n      event.preventDefault();\r\n      if(this.state.password.length<=5){\r\n        this.setState({\r\n          passwordHelperText:\"비밀번호는 6자리이상으로 설정해주세요\"\r\n        })\r\n        canPass=false;\r\n      }\r\n      else{\r\n        this.setState({\r\n          passwordHelperText:\"\"\r\n        })\r\n      }\r\n      if(this.state.password_confirmed!==this.state.password){\r\n        this.setState({\r\n          password_confirmedHelperText:\"비밀번호가 일치하지 않습니다\"\r\n        })\r\n        canPass=false;\r\n      }\r\n      else{\r\n        this.setState({\r\n          password_confirmedHelperText:\"\"\r\n        })\r\n      }\r\n      if(this.state.nickname.length<=2){\r\n        this.setState({\r\n          nicknameHelperText:\"닉네임은 3글자 이상으로 해주세요\"\r\n        })\r\n        canPass=false;\r\n      }\r\n      else{\r\n        this.setState({\r\n          nicknameHelperText:\"\"\r\n        })\r\n      }\r\n      if(canPass==true){\r\n      axios.post('/api/users/register', {\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n        nickname:this.state.nickname\r\n      }).then(res=>{\r\n        if(res.data.success===true){\r\n          this.props.history.push('/login')\r\n          alert(\"성공적으로 회원가입되었습니다\")\r\n        }\r\n        else{\r\n          //Todo 회원 가입 실패시 오류 메세지\r\n          alert(\"알 수 없는 오류가 발생하였습니다\")\r\n        }\r\n      })\r\n      }\r\n    }\r\n    render(){\r\n        return(<div>\r\n            \r\n            <div >\r\n            <div className=\"navigationBar\">SPARCS Newbie Project</div>\r\n            <Button className=\"navigationBar\" onClick={this.loginOnClickHanlder}>Login</Button>\r\n            <Button className=\"navigationBar\">Register</Button>\r\n            </div>\r\n\r\n            <form className=\"form\" onSubmit={this.onSubmitHandler}>\r\n            <TextField\r\n              type=\"email\"\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              name=\"email\"\r\n              label=\"Email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              onChange={this.emailOnChangeHandler}\r\n              error={this.state.emailHelperText===\"\"?false:true}\r\n              helperText={this.state.emailHelperText}\r\n            />\r\n            <TextField\r\n            type=\"password\"\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={this.passwordOnChangeHandler}\r\n              error={this.state.passwordHelperText===\"\"?false:true}\r\n              helperText={this.state.passwordHelperText}\r\n            />\r\n            <TextField\r\n            type=\"password\"\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password-Confirmed\"\r\n              autoComplete=\"current-password\"\r\n             onChange={this.password_confirmedOnChangedHandler}\r\n             error={this.state.password_confirmedHelperText===\"\"?false:true}\r\n             helperText={this.state.password_confirmedHelperText}\r\n            />\r\n            <TextField\r\n            type=\"text\"\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              name=\"email\"\r\n              label=\"Nick name\"\r\n              inputProps={{\r\n                maxlength: 20\r\n              }}\r\n              onChange={this.nicknameOnChangeHandler}\r\n              error={this.state.nicknameHelperText===\"\"?false:true}\r\n              helperText={this.state.nicknameHelperText}\r\n            />\r\n             <Button\r\n              type=\"submit\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n            >Register</Button>\r\n</form>\r\n\r\n        </div>);\r\n    }\r\n\r\n}\r\nexport default RegisterPage;","C:\\src\\chat\\client\\src\\components\\LoginPage\\index.js",[],"C:\\src\\chat\\client\\src\\utills\\socket.js",[],"C:\\src\\chat\\client\\src\\components\\ExpiredPage\\index.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":2,"column":8,"nodeType":"56","messageId":"57","endLine":2,"endColumn":17},{"ruleId":"58","severity":1,"message":"59","line":46,"column":53,"nodeType":"60","messageId":"61","endLine":46,"endColumn":55},{"ruleId":"54","severity":1,"message":"62","line":77,"column":13,"nodeType":"56","messageId":"57","endLine":77,"endColumn":22},{"ruleId":"63","severity":1,"message":"64","line":142,"column":22,"nodeType":"56","messageId":"65","endLine":142,"endColumn":23},{"ruleId":"50","replacedBy":"66"},{"ruleId":"52","replacedBy":"67"},{"ruleId":"58","severity":1,"message":"59","line":82,"column":17,"nodeType":"60","messageId":"61","endLine":82,"endColumn":19},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-unused-vars","'TextField' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'playAlert' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared",["68"],["69"],"no-global-assign","no-unsafe-negation"]